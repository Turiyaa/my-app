{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","assertThisInitialized","handleAdd","e","target","value","name","setState","defineProperty","preventDefault","tempApt","props","addAppointment","toggleForm","react_default","a","createElement","className","formDisplay","onClick","fa","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","dist_default","date","parse","format","App","myAppointments","lastIndex","testFetch","apt","tempApts","unshift","without","_this2","fetch","then","response","json","result","apts","headers","mode","components_AddAppointments","components_SearchAppointments","components_ListAppointments","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc137e1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {FaPlus} from 'react-icons/fa';\nclass AddAppointments extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      petName: '',\n      ownerName: '',\n      aptDate: '',\n      aptTime: '',\n      aptNotes: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleChange(e){\n    const target = e.target\n    const value = target.value\n    const name = target.name\n\n    this.setState({\n      [name] : value\n\n    });\n  }\n  handleAdd(e){\n    e.preventDefault();\n    let tempApt = {\n      petName: this.state.petName,\n      ownerName: this.state.ownerName,\n      aptDate : this.state.aptDate +' '+ this.state.aptTime,\n      aptNotes: this.state.aptNotes\n    }\n    this.props.addAppointment(tempApt);\n\n    this.setState({\n      petName: '',\n      ownerName: '',\n      aptDate: '',\n      aptTime: '',\n      aptNotes: ''\n    });\n\n    this.props.toggleForm();\n  }\n  render() {\n    return(\n      <div className ={\n        'card textcenter mt-3 ' +\n        (this.props.formDisplay ? '': 'add-appointment')\n      }>\n          <div className=\"apt-addh eading card-header bg-primary text-white\"\n          onClick={this.props.toggleForm} >\n            <FaPlus/> Add Appointment\n          </div>\n\n          <div className=\"card-body\">\n            <form id=\"aptForm\" noValidate\n            onSubmit ={this.handleAdd}>\n              <div className=\"form-group form-row\">\n                <label\n                  className=\"col-md-2 col-form-label text-md-right\"\n                  htmlFor=\"petName\"\n                  readOnly\n                >\n                  Pet Name\n                </label>\n                <div className=\"col-md-10\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"petName\"\n                    placeholder=\"Pet's Name\"\n                    value = {this.state.petName}\n                    onChange = {this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group form-row\">\n                <label\n                  className=\"col-md-2 col-form-label text-md-right\"\n                  htmlFor=\"ownerName\"\n                >\n                  Pet Owner\n                </label>\n                <div className=\"col-md-10\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"ownerName\"\n                    placeholder=\"Owner's Name\"\n                    value = {this.state.ownerName}\n                    onChange = {this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group form-row\">\n                <label\n                  className=\"col-md-2 col-form-label text-md-right\"\n                  htmlFor=\"aptDate\"\n                >\n                  Date\n                </label>\n                <div className=\"col-md-4\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"aptDate\"\n                    id=\"aptDate\"\n                    value = {this.state.aptDate}\n                    onChange = {this.handleChange}\n                  />\n                </div>\n                <label\n                  className=\"col-md-2 col-form-label text-md-right\"\n                  htmlFor=\"aptTime\"\n                >\n                  Time\n                </label>\n                <div className=\"col-md-4\">\n                  <input\n                    type=\"time\"\n                    className=\"form-control\"\n                    name=\"aptTime\"\n                    id=\"aptTime\"\n                    value = {this.state.aptTime}\n                    onChange = {this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group form-row\">\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                  Apt. Notes\n                </label>\n                <div className=\"col-md-10\">\n                  <textarea\n                    className=\"form-control\"\n                    rows=\"4\"\n                    cols=\"50\"\n                    name=\"aptNotes\"\n                    id=\"aptNotes\"\n                    placeholder=\"Appointment Notes\"\n                    value = {this.state.aptNotes}\n                    onChange = {this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group form-row mb-0\">\n                <div className=\"offset-md-2 col-md-10\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary d-block ml-auto\"\n                  >\n                    Add Appointment\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n  }\n}\nexport default AddAppointments;\n","import React, {\n  Component\n} from 'react';\n\nclass SearchAppointments extends Component {\n  render() {\n    return <div > Search Appointments < /div>;\n  }\n}\nexport default SearchAppointments;","import React, { Component } from 'react';\nimport {  FaTimes } from 'react-icons/fa';\nimport Moment from 'react-moment';\nclass ListAppointments extends Component {\n  render() {\n    // way to print arrayelement  jsx required to put inside container\n    const  listItems = this.props.appointments.map(item => (\n    <div>\n    <div>{item.petName} </div>\n    <div> {item.ownerName} </div>\n    </div>\n  ));\nreturn (\n    <div className=\"appointment-list item-list mb-3\">\n        {this.props.appointments.map( item => (\n          <div className=\"pet-item col media py-3\" key ={item.aptId}>\n            <div className=\"mr-3\">\n              <button className=\"pet-delete btn btn-sm btn-danger\"\n              onClick={() => this.props.deleteAppointment(item)}\n              >\n              <FaTimes/>\n              </button>\n            </div>\n\n            <div className=\"pet-info media-body\">\n              <div className=\"pet-head d-flex\">\n                <span className=\"pet-name\">{item.petName}</span>\n                <span className=\"apt-date ml-auto\">\n                <Moment\n                date = {item.aptDate}\n                parse = \"YYYY-MM-dd hh:mm\"\n                format = \"MMM-D h:mma\"\n                />\n                </span>\n              </div>\n\n              <div className=\"owner-name\">\n                <span className=\"label-item\">Owner: </span>\n                <span>{item.ownerName}</span>\n              </div>\n              <div className=\"apt-notes\">{item.aptNotes}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nexport default ListAppointments;\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments';\nimport SearchAppointments from './SearchAppointments';\nimport ListAppointments from './ListAppointments';\nimport { without } from 'lodash';\nclass App extends Component {\n\n  constructor(){\n    super();\n    //never modify state directly\n    this.state = {\n      myAppointments: [],\n      lastIndex: 0,\n      formDisplay : false\n    };\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.testFetch = this.testFetch.bind(this);\n  }\ntoggleForm(){\n  this.setState({\n    formDisplay : !this.state.formDisplay\n  });\n}\n\naddAppointment(apt){\n  let tempApts = this.state.myAppointments;\n  apt.aptId = this.state.lastIndex;\n  tempApts.unshift(apt);\n\n  this.setState({\n    myAppointments: tempApts,\n    lastIndex: this.state.lastIndex + 1\n  });\n}\n\ndeleteAppointment(apt){\n  let tempApts = this.state.myAppointments;\n  tempApts = without(tempApts, apt);\n\n  this.setState({\n  myAppointments : tempApts\n});\nthis.testFetch();\n}\n  // read data\n  componentDidMount(){\n    fetch('./data.json')\n    .then(response => response.json())\n    .then(result => {\n      const apts = result.map(item => {\n        item.aptId = this.state.lastIndex;\n        this.setState({ lastIndex: this.state.lastIndex + 1 });\n        return item;\n      })\n      this.setState({\n        myAppointments: apts,\n      })\n    });\n  }\n\n  testFetch(){\n  fetch('http://129.3.20.26:1312/SMARTron/rest/answerkey',{\n    headers:{\n      'mode': 'no-cors'\n    }\n  })\n  .then(response => response.json())\n  .then(result => {\n    const keys = result.map(item => {\n      return item;\n    })\n  });\n}\n\n  render() {\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments formDisplay = {this.state.formDisplay}\n                toggleForm = {this.toggleForm}\n                addAppointment = {this.addAppointment}/>\n                <SearchAppointments/>\n                <ListAppointments appointments={this.state.myAppointments}\n                deleteAppointment={this.deleteAppointment}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}